#!/bin/bash

function createProducer() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/producer.energy.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/producer.energy.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7054 --caname ca-producer --tls.certfiles "${PWD}/organizations/fabric-ca/producer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-producer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-producer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-producer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7054-ca-producer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/producer.energy.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy producer's CA cert to producer's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/producer.energy.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/producer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/producer.energy.com/msp/tlscacerts/ca.crt"

  # Copy producer's CA cert to producer's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/producer.energy.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/producer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/producer.energy.com/tlsca/tlsca.producer.energy.com-cert.pem"

  # Copy producer's CA cert to producer's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/producer.energy.com/ca"
  cp "${PWD}/organizations/fabric-ca/producer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/producer.energy.com/ca/ca.producer.energy.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-producer --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/producer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering peer1"
  set -x
  fabric-ca-client register --caname ca-producer --id.name peer1 --id.secret peer1pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/producer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-producer --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/producer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-producer --id.name produceradmin --id.secret produceradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/producer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-producer -M "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer0.producer.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/producer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/producer.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer0.producer.energy.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7054 --caname ca-producer -M "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer0.producer.energy.com/tls" --enrollment.profile tls --csr.hosts peer0.producer.energy.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/producer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer0.producer.energy.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer0.producer.energy.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer0.producer.energy.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer0.producer.energy.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer0.producer.energy.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer0.producer.energy.com/tls/server.key"

  echo "Generating the peer1 msp"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:7054 --caname ca-producer -M "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer1.producer.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/producer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/producer.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer1.producer.energy.com/msp/config.yaml"

  echo "Generating the peer1-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer1:peer1pw@localhost:7054 --caname ca-producer -M "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer1.producer.energy.com/tls" --enrollment.profile tls --csr.hosts peer1.producer.energy.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/producer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer1.producer.energy.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer1.producer.energy.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer1.producer.energy.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer1.producer.energy.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer1.producer.energy.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/producer.energy.com/peers/peer1.producer.energy.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7054 --caname ca-producer -M "${PWD}/organizations/peerOrganizations/producer.energy.com/users/User1@producer.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/producer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/producer.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/producer.energy.com/users/User1@producer.energy.com/msp/config.yaml"

  echo "Generating the producer admin msp"
  set -x
  fabric-ca-client enroll -u https://produceradmin:produceradminpw@localhost:7054 --caname ca-producer -M "${PWD}/organizations/peerOrganizations/producer.energy.com/users/Admin@producer.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/producer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/producer.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/producer.energy.com/users/Admin@producer.energy.com/msp/config.yaml"
}

function createConsumer() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/consumer.energy.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/consumer.energy.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8054 --caname ca-consumer --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-consumer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-consumer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-consumer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8054-ca-consumer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/consumer.energy.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy consumer's CA cert to consumer's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/consumer.energy.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/consumer.energy.com/msp/tlscacerts/ca.crt"

  # Copy consumer's CA cert to consumer's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/consumer.energy.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/consumer.energy.com/tlsca/tlsca.consumer.energy.com-cert.pem"

  # Copy consumer's CA cert to consumer's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/consumer.energy.com/ca"
  cp "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem" "${PWD}/organizations/peerOrganizations/consumer.energy.com/ca/ca.consumer.energy.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-consumer --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-consumer --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-consumer --id.name consumeradmin --id.secret consumeradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-consumer -M "${PWD}/organizations/peerOrganizations/consumer.energy.com/peers/peer0.consumer.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/consumer.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/consumer.energy.com/peers/peer0.consumer.energy.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8054 --caname ca-consumer -M "${PWD}/organizations/peerOrganizations/consumer.energy.com/peers/peer0.consumer.energy.com/tls" --enrollment.profile tls --csr.hosts peer0.consumer.energy.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/consumer.energy.com/peers/peer0.consumer.energy.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/consumer.energy.com/peers/peer0.consumer.energy.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/consumer.energy.com/peers/peer0.consumer.energy.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/consumer.energy.com/peers/peer0.consumer.energy.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/consumer.energy.com/peers/peer0.consumer.energy.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/consumer.energy.com/peers/peer0.consumer.energy.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:8054 --caname ca-consumer -M "${PWD}/organizations/peerOrganizations/consumer.energy.com/users/User1@consumer.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/consumer.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/consumer.energy.com/users/User1@consumer.energy.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://consumeradmin:consumeradminpw@localhost:8054 --caname ca-consumer -M "${PWD}/organizations/peerOrganizations/consumer.energy.com/users/Admin@consumer.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/consumer/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/consumer.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/consumer.energy.com/users/Admin@consumer.energy.com/msp/config.yaml"
}

function createRegulator() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/regulator.energy.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/regulator.energy.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:7066 --caname ca-regulator --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-7066-ca-regulator.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-7066-ca-regulator.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-7066-ca-regulator.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-7066-ca-regulator.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/regulator.energy.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy regulator's CA cert to regulator's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/regulator.energy.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem" "${PWD}/organizations/peerOrganizations/regulator.energy.com/msp/tlscacerts/ca.crt"

  # Copy regulator's CA cert to regulator's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/regulator.energy.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem" "${PWD}/organizations/peerOrganizations/regulator.energy.com/tlsca/tlsca.regulator.energy.com-cert.pem"

  # Copy regulator's CA cert to regulator's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/regulator.energy.com/ca"
  cp "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem" "${PWD}/organizations/peerOrganizations/regulator.energy.com/ca/ca.regulator.energy.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-regulator --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-regulator --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-regulator --id.name regulatoradmin --id.secret regulatoradminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7066 --caname ca-regulator -M "${PWD}/organizations/peerOrganizations/regulator.energy.com/peers/peer0.regulator.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/regulator.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/regulator.energy.com/peers/peer0.regulator.energy.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:7066 --caname ca-regulator -M "${PWD}/organizations/peerOrganizations/regulator.energy.com/peers/peer0.regulator.energy.com/tls" --enrollment.profile tls --csr.hosts peer0.regulator.energy.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/regulator.energy.com/peers/peer0.regulator.energy.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/regulator.energy.com/peers/peer0.regulator.energy.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/regulator.energy.com/peers/peer0.regulator.energy.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/regulator.energy.com/peers/peer0.regulator.energy.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/regulator.energy.com/peers/peer0.regulator.energy.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/regulator.energy.com/peers/peer0.regulator.energy.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:7066 --caname ca-regulator -M "${PWD}/organizations/peerOrganizations/regulator.energy.com/users/User1@regulator.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/regulator.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/regulator.energy.com/users/User1@regulator.energy.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://regulatoradmin:regulatoradminpw@localhost:7066 --caname ca-regulator -M "${PWD}/organizations/peerOrganizations/regulator.energy.com/users/Admin@regulator.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/regulator/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/regulator.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/regulator.energy.com/users/Admin@regulator.energy.com/msp/config.yaml"
}

function createStorage() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/storage.energy.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/storage.energy.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8066 --caname ca-storage --tls.certfiles "${PWD}/organizations/fabric-ca/storage/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8066-ca-storage.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8066-ca-storage.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8066-ca-storage.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8066-ca-storage.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/storage.energy.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy storage's CA cert to storage's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/storage.energy.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/storage/ca-cert.pem" "${PWD}/organizations/peerOrganizations/storage.energy.com/msp/tlscacerts/ca.crt"

  # Copy storage's CA cert to storage's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/storage.energy.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/storage/ca-cert.pem" "${PWD}/organizations/peerOrganizations/storage.energy.com/tlsca/tlsca.storage.energy.com-cert.pem"

  # Copy storage's CA cert to storage's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/storage.energy.com/ca"
  cp "${PWD}/organizations/fabric-ca/storage/ca-cert.pem" "${PWD}/organizations/peerOrganizations/storage.energy.com/ca/ca.storage.energy.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-storage --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/storage/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-storage --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/storage/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-storage --id.name storageadmin --id.secret storageadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/storage/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8066 --caname ca-storage -M "${PWD}/organizations/peerOrganizations/storage.energy.com/peers/peer0.storage.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/storage/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/storage.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/storage.energy.com/peers/peer0.storage.energy.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8066 --caname ca-storage -M "${PWD}/organizations/peerOrganizations/storage.energy.com/peers/peer0.storage.energy.com/tls" --enrollment.profile tls --csr.hosts peer0.storage.energy.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/storage/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/storage.energy.com/peers/peer0.storage.energy.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/storage.energy.com/peers/peer0.storage.energy.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/storage.energy.com/peers/peer0.storage.energy.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/storage.energy.com/peers/peer0.storage.energy.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/storage.energy.com/peers/peer0.storage.energy.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/storage.energy.com/peers/peer0.storage.energy.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:8066 --caname ca-storage -M "${PWD}/organizations/peerOrganizations/storage.energy.com/users/User1@storage.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/storage/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/storage.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/storage.energy.com/users/User1@storage.energy.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://storageadmin:storageadminpw@localhost:8066 --caname ca-storage -M "${PWD}/organizations/peerOrganizations/storage.energy.com/users/Admin@storage.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/storage/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/storage.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/storage.energy.com/users/Admin@storage.energy.com/msp/config.yaml"
}

function createFinance() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/peerOrganizations/finance.energy.com/

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/peerOrganizations/finance.energy.com/

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:8154 --caname ca-finance --tls.certfiles "${PWD}/organizations/fabric-ca/finance/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-8154-ca-finance.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-8154-ca-finance.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-8154-ca-finance.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-8154-ca-finance.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/peerOrganizations/finance.energy.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy finance's CA cert to finance's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/peerOrganizations/finance.energy.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/finance/ca-cert.pem" "${PWD}/organizations/peerOrganizations/finance.energy.com/msp/tlscacerts/ca.crt"

  # Copy finance's CA cert to finance's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/finance.energy.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/finance/ca-cert.pem" "${PWD}/organizations/peerOrganizations/finance.energy.com/tlsca/tlsca.finance.energy.com-cert.pem"

  # Copy finance's CA cert to finance's /ca directory (for use by clients)
  mkdir -p "${PWD}/organizations/peerOrganizations/finance.energy.com/ca"
  cp "${PWD}/organizations/fabric-ca/finance/ca-cert.pem" "${PWD}/organizations/peerOrganizations/finance.energy.com/ca/ca.finance.energy.com-cert.pem"

  echo "Registering peer0"
  set -x
  fabric-ca-client register --caname ca-finance --id.name peer0 --id.secret peer0pw --id.type peer --tls.certfiles "${PWD}/organizations/fabric-ca/finance/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering user"
  set -x
  fabric-ca-client register --caname ca-finance --id.name user1 --id.secret user1pw --id.type client --tls.certfiles "${PWD}/organizations/fabric-ca/finance/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the org admin"
  set -x
  fabric-ca-client register --caname ca-finance --id.name financeadmin --id.secret financeadminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/finance/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the peer0 msp"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8154 --caname ca-finance -M "${PWD}/organizations/peerOrganizations/finance.energy.com/peers/peer0.finance.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/finance/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/finance.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/finance.energy.com/peers/peer0.finance.energy.com/msp/config.yaml"

  echo "Generating the peer0-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://peer0:peer0pw@localhost:8154 --caname ca-finance -M "${PWD}/organizations/peerOrganizations/finance.energy.com/peers/peer0.finance.energy.com/tls" --enrollment.profile tls --csr.hosts peer0.finance.energy.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/finance/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the peer's tls directory that are referenced by peer startup config
  cp "${PWD}/organizations/peerOrganizations/finance.energy.com/peers/peer0.finance.energy.com/tls/tlscacerts/"* "${PWD}/organizations/peerOrganizations/finance.energy.com/peers/peer0.finance.energy.com/tls/ca.crt"
  cp "${PWD}/organizations/peerOrganizations/finance.energy.com/peers/peer0.finance.energy.com/tls/signcerts/"* "${PWD}/organizations/peerOrganizations/finance.energy.com/peers/peer0.finance.energy.com/tls/server.crt"
  cp "${PWD}/organizations/peerOrganizations/finance.energy.com/peers/peer0.finance.energy.com/tls/keystore/"* "${PWD}/organizations/peerOrganizations/finance.energy.com/peers/peer0.finance.energy.com/tls/server.key"

  echo "Generating the user msp"
  set -x
  fabric-ca-client enroll -u https://user1:user1pw@localhost:8154 --caname ca-finance -M "${PWD}/organizations/peerOrganizations/finance.energy.com/users/User1@finance.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/finance/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/finance.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/finance.energy.com/users/User1@finance.energy.com/msp/config.yaml"

  echo "Generating the org admin msp"
  set -x
  fabric-ca-client enroll -u https://financeadmin:financeadminpw@localhost:8154 --caname ca-finance -M "${PWD}/organizations/peerOrganizations/finance.energy.com/users/Admin@finance.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/finance/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/peerOrganizations/finance.energy.com/msp/config.yaml" "${PWD}/organizations/peerOrganizations/finance.energy.com/users/Admin@finance.energy.com/msp/config.yaml"
}

function createOrderer() {
  echo "Enrolling the CA admin"
  mkdir -p organizations/ordererOrganizations/energy.com

  export FABRIC_CA_CLIENT_HOME=${PWD}/organizations/ordererOrganizations/energy.com

  set -x
  fabric-ca-client enroll -u https://admin:adminpw@localhost:9054 --caname ca-orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo 'NodeOUs:
  Enable: true
  ClientOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: client
  PeerOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: peer
  AdminOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: admin
  OrdererOUIdentifier:
    Certificate: cacerts/localhost-9054-ca-orderer.pem
    OrganizationalUnitIdentifier: orderer' > "${PWD}/organizations/ordererOrganizations/energy.com/msp/config.yaml"

  # Since the CA serves as both the organization CA and TLS CA, copy the org's root cert that was generated by CA startup into the org level ca and tlsca directories

  # Copy orderer org's CA cert to orderer org's /msp/tlscacerts directory (for use in the channel MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/energy.com/msp/tlscacerts"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/energy.com/msp/tlscacerts/tlsca.energy.com-cert.pem"

  # Copy orderer org's CA cert to orderer org's /tlsca directory (for use by clients)
  mkdir -p "${PWD}/organizations/ordererOrganizations/energy.com/tlsca"
  cp "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem" "${PWD}/organizations/ordererOrganizations/energy.com/tlsca/tlsca.energy.com-cert.pem"

  echo "Registering orderer"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name orderer --id.secret ordererpw --id.type orderer --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Registering the orderer admin"
  set -x
  fabric-ca-client register --caname ca-orderer --id.name ordererAdmin --id.secret ordererAdminpw --id.type admin --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  echo "Generating the orderer msp"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/energy.com/orderers/orderer.energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/energy.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/energy.com/orderers/orderer.energy.com/msp/config.yaml"

  echo "Generating the orderer-tls certificates, use --csr.hosts to specify Subject Alternative Names"
  set -x
  fabric-ca-client enroll -u https://orderer:ordererpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/energy.com/orderers/orderer.energy.com/tls" --enrollment.profile tls --csr.hosts orderer.energy.com --csr.hosts localhost --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  # Copy the tls CA cert, server cert, server keystore to well known file names in the orderer's tls directory that are referenced by orderer startup config
  cp "${PWD}/organizations/ordererOrganizations/energy.com/orderers/orderer.energy.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/energy.com/orderers/orderer.energy.com/tls/ca.crt"
  cp "${PWD}/organizations/ordererOrganizations/energy.com/orderers/orderer.energy.com/tls/signcerts/"* "${PWD}/organizations/ordererOrganizations/energy.com/orderers/orderer.energy.com/tls/server.crt"
  cp "${PWD}/organizations/ordererOrganizations/energy.com/orderers/orderer.energy.com/tls/keystore/"* "${PWD}/organizations/ordererOrganizations/energy.com/orderers/orderer.energy.com/tls/server.key"

  # Copy orderer org's CA cert to orderer's /msp/tlscacerts directory (for use in the orderer MSP definition)
  mkdir -p "${PWD}/organizations/ordererOrganizations/energy.com/orderers/orderer.energy.com/msp/tlscacerts"
  cp "${PWD}/organizations/ordererOrganizations/energy.com/orderers/orderer.energy.com/tls/tlscacerts/"* "${PWD}/organizations/ordererOrganizations/energy.com/orderers/orderer.energy.com/msp/tlscacerts/tlsca.energy.com-cert.pem"

  echo "Generating the admin msp"
  set -x
  fabric-ca-client enroll -u https://ordererAdmin:ordererAdminpw@localhost:9054 --caname ca-orderer -M "${PWD}/organizations/ordererOrganizations/energy.com/users/Admin@energy.com/msp" --tls.certfiles "${PWD}/organizations/fabric-ca/ordererOrg/ca-cert.pem"
  { set +x; } 2>/dev/null

  cp "${PWD}/organizations/ordererOrganizations/energy.com/msp/config.yaml" "${PWD}/organizations/ordererOrganizations/energy.com/users/Admin@energy.com/msp/config.yaml"
}

createProducer
createConsumer
createRegulator
createStorage
createFinance
createOrderer